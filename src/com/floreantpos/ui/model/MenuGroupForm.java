/*
 * FoodGroupEditor.java
 *
 * Created on August 2, 2006, 8:55 PM
 */

package com.floreantpos.ui.model;

import java.awt.Frame;
import java.util.List;

import com.floreantpos.POSConstants;
import com.floreantpos.bo.ui.BOMessageDialog;
import com.floreantpos.bo.ui.BackOfficeWindow;
import com.floreantpos.model.MenuCategory;
import com.floreantpos.model.MenuGroup;
import com.floreantpos.model.dao.MenuCategoryDAO;
import com.floreantpos.model.dao.MenuGroupDAO;
import com.floreantpos.swing.ComboBoxModel;
import com.floreantpos.swing.FixedLengthDocument;
import com.floreantpos.swing.MessageDialog;
import com.floreantpos.ui.BeanEditor;
import com.floreantpos.ui.dialog.BeanEditorDialog;
import com.floreantpos.util.POSUtil;

/**
 *
 * @author MShahriar
 */
public class MenuGroupForm extends BeanEditor<MenuGroup> {

  /**
   * 
   */
  private static final long serialVersionUID = 1L;

  /** Creates new form FoodGroupEditor */
  public MenuGroupForm() {
    this(new MenuGroup());
  }

  @SuppressWarnings("unchecked")
  public MenuGroupForm(MenuGroup foodGroup) {
    initComponents();

    tfName.setDocument(new FixedLengthDocument(20));

    MenuCategoryDAO categoryDAO = new MenuCategoryDAO();
    List<MenuCategory> foodCategories = categoryDAO.findAll();
    cbCategory.setModel(new ComboBoxModel(foodCategories));

    setBean(foodGroup);
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
  private void initComponents() {
    lblName = new javax.swing.JLabel();
    tfName = new com.floreantpos.swing.FixedLengthTextField();
    lblCategory = new javax.swing.JLabel();
    cbCategory = new javax.swing.JComboBox<>();
    chkVisible = new javax.swing.JCheckBox();
    btnNewCategory = new javax.swing.JButton();

    lblName.setText(POSConstants.NAME + POSConstants.COLON);
    lblCategory.setText(POSConstants.CATEGORY + POSConstants.COLON);

    chkVisible.setText(POSConstants.VISIBLE);
    chkVisible.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
    chkVisible.setMargin(new java.awt.Insets(0, 0, 0, 0));
    chkVisible.setSelected(true);

    btnNewCategory.setText("...");
    btnNewCategory.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        doNewCategory(evt);
      }
    });

    org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
    this.setLayout(layout);
    layout
        .setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(
                    layout.createSequentialGroup().addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblCategory).add(lblName))
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(tfName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 295,
                            Short.MAX_VALUE)
                        .add(chkVisible).add(org.jdesktop.layout.GroupLayout.TRAILING,
                            layout.createSequentialGroup().add(cbCategory, 0, 242, Short.MAX_VALUE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(btnNewCategory)))
                        .addContainerGap()));
    layout.setVerticalGroup(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
        .add(layout.createSequentialGroup().addContainerGap()
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(lblName)
                .add(tfName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(lblCategory).add(btnNewCategory).add(cbCategory,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(chkVisible)
            .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
  }// </editor-fold>//GEN-END:initComponents

  private void doNewCategory(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_doNewCategory
    try {
      MenuCategoryForm editor = new MenuCategoryForm();
      BeanEditorDialog dialog = new BeanEditorDialog(editor, new Frame(), true);
      dialog.open();
      if (!dialog.isCanceled()) {
        MenuCategory foodCategory = editor.getBean();
        ComboBoxModel model = (ComboBoxModel) cbCategory.getModel();
        model.addElement(foodCategory);
        model.setSelectedItem(foodCategory);
      }
    } catch (Exception x) {
      MessageDialog.showError(this, com.floreantpos.POSConstants.ERROR_MESSAGE, x);
    }
  }// GEN-LAST:event_doNewCategory


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnNewCategory;
  private javax.swing.JComboBox<MenuCategory> cbCategory;
  private javax.swing.JCheckBox chkVisible;
  private javax.swing.JLabel lblName;
  private javax.swing.JLabel lblCategory;
  private com.floreantpos.swing.FixedLengthTextField tfName;

  // End of variables declaration//GEN-END:variables
  @Override
  public boolean save() {
    if (!updateModel())
      return false;

    MenuGroup foodGroup = getBean();

    try {
      MenuGroupDAO foodGroupDAO = new MenuGroupDAO();
      foodGroupDAO.saveOrUpdate(foodGroup);
    } catch (Exception e) {
      MessageDialog.showError(this, e);
      return false;
    }
    return true;
  }

  @Override
  protected void updateView() {
    MenuGroup foodGroup = getBean();
    if (foodGroup == null) {
      tfName.setText("");
      cbCategory.setSelectedItem(null);
      chkVisible.setSelected(false);
      return;
    }
    tfName.setText(foodGroup.getName());
    chkVisible.setSelected(foodGroup.isVisible());

    if (foodGroup.getCategory() != null) {
      cbCategory.setSelectedItem(foodGroup.getCategory());
    }

    if (foodGroup.getId() == null) {
      chkVisible.setSelected(true);
    } else {
      chkVisible.setSelected(foodGroup.isVisible());
    }
  }

  @Override
  protected boolean updateModel() {
    MenuGroup foodGroup = getBean();
    if (foodGroup == null) {
      return false;
    }

    String name = tfName.getText();
    if (POSUtil.isBlankOrNull(name)) {
      BOMessageDialog.showError(BackOfficeWindow.getInstance(), "需要二级类目名称");
      return false;
    }

    MenuCategory category = (MenuCategory) cbCategory.getSelectedItem();
    if (category == null) {
      BOMessageDialog.showError(BackOfficeWindow.getInstance(), "需要关联一级类目");
      return false;
    }

    foodGroup.setName(tfName.getText());

    foodGroup.setCategory(category);
    foodGroup.setVisible(chkVisible.isSelected());

    return true;
  }

  @Override
  public String getDisplayText() {
    MenuGroup foodGroup = getBean();
    if (foodGroup.getId() == null) {
      return "新建二级类目";
    }
    return "编辑二级类目";
  }
}
